name: Vercel Deployment Monitor

on:
  deployment_status:

jobs:
  monitor-vercel-deployment:
    runs-on: ubuntu-latest
    permissions:
      issues: write

    steps:
      - name: Wait 5 seconds to allow Vercel checks to complete
        run: sleep 5

      - name: Debug event info (for logging)
        run: |
          echo "Deployment status state: ${{ github.event.deployment_status.state }}"
          echo "Deployment environment: ${{ github.event.deployment.environment }}"
          echo "Deployment URL: ${{ github.event.deployment_status.target_url }}"

      - name: Handle deployment failure (create issue if needed)
        if: ${{ github.event.deployment_status.state == 'failure' && github.event.deployment.environment == 'Production - thescratchchannel' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Vercel Deployment Failure';

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'deployment',
            });

            const exists = issues.some(issue => issue.title === title);

            if (!exists) {
              const sha = context.payload.deployment?.sha || 'unknown';
              const repoUrl = context.payload.repository?.html_url || '';
              const commitUrl = `${repoUrl}/commit/${sha}`;
              const deploymentUrl = context.payload.deployment_status?.target_url || repoUrl;

              const body = [
                'Detected a failed deployment to **Vercel**. Please review the logs and recent edits to resolve this issue as soon as possible.',
                '',
                '**Details:**',
                '- Status: `Failed`',
                `- Logs: [View Deployment](${deploymentUrl})`,
                `- Commit: [\`${sha.substring(0, 7)}\`](${commitUrl})`,
                '',
                '*I am a bot, and this issue was generated automatically.*'
              ].join('\n');

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
                labels: ['deployment', 'HIGH PRIORITY'],
                assignees: ['polylogue2', 'snoopythe3-from-scratch', 'kRxZykRxZy', 'nouxinf']
              });
            } else {
              console.log('Issue already exists.');
            }

      - name: Handle deployment success (close issue if exists)
        if: ${{ github.event.deployment_status.state == 'success' && github.event.deployment.environment == 'Production - thescratchchannel' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = 'Vercel Deployment Failure';

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'deployment',
            });

            const issue = issues.find(issue => issue.title === title);

            if (issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: 'This issue was closed as the deployment was resolved.'
              });

              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });

              console.log('Closed issue #' + issue.number);
            } else {
              console.log('No open deployment issue to close.');
            }
