permissions:
  contents: read
  deployments: read

name: Deployment Logger

on:
  deployment_status

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Get all deployments
        id: deployments
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/deployments
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get statuses for each deployment
        id: statuses
        run: |
          deployments=$(echo '${{ steps.deployments.outputs.data }}' | jq -r '.[] | @base64')
          summary=""
          overall="success"

          decode() { echo "$1" | base64 --decode; }

          for d in $deployments; do
            env=$(decode $d | jq -r '.environment')
            id=$(decode $d | jq -r '.id')

            status=$(gh api repos/${{ github.repository }}/deployments/$id/statuses \
              --jq '.[0].state')

            case "$status" in
              success)
                emoji="✅"
                ;;
              failure|error)
                emoji="❌"
                overall="failure"
                ;;
              in_progress|queued|pending)
                emoji="⏳"
                if [ "$overall" = "success" ]; then
                  overall="partial"
                fi
                ;;
              *)
                emoji="❔"
                ;;
            esac

            summary+="$env: $emoji\n"
          done

          if [ "$overall" = "success" ]; then
            title="Deployment success"
            color=3066993 # green
          elif [ "$overall" = "failure" ]; then
            title="Deployment failed"
            color=15158332 # red
          else
            title="Partial deployment failure"
            color=16776960 # yellow
          fi

          echo "title=$title" >> $GITHUB_OUTPUT
          echo "summary=$summary" >> $GITHUB_OUTPUT
          echo "color=$color" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send to Discord
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: ${{ steps.statuses.outputs.title }}
          embed-description: ${{ steps.statuses.outputs.summary }}
          embed-color: ${{ steps.statuses.outputs.color }}
          embed-footer-text: Automated by GitHub Actions
